# Generated by Django 5.1.1 on 2025-06-13 15:49

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0094_alter_page_locale"),
        ("wagtailimages", "0027_image_description"),
    ]

    operations = [
        migrations.CreateModel(
            name="TurkeyTrotPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "title_override",
                    models.CharField(
                        blank=True,
                        help_text="Override the page title displayed on the page",
                        max_length=255,
                    ),
                ),
                (
                    "event_date",
                    models.DateTimeField(
                        blank=True, help_text="Date and time of the event", null=True
                    ),
                ),
                (
                    "event_location",
                    models.CharField(
                        blank=True, help_text="Event location", max_length=255
                    ),
                ),
                (
                    "event_address",
                    models.TextField(blank=True, help_text="Full event address"),
                ),
                ("donate_url", models.URLField(blank=True, help_text="Donation link")),
                (
                    "registration_url",
                    models.URLField(blank=True, help_text="Registration link"),
                ),
                (
                    "sponsor_pdf_url",
                    models.URLField(blank=True, help_text="Sponsor packet PDF"),
                ),
                (
                    "volunteer_url",
                    models.URLField(blank=True, help_text="Volunteer signup"),
                ),
                ("results_url", models.URLField(blank=True, help_text="Results link")),
                ("photos_url", models.URLField(blank=True, help_text="Photos link")),
                (
                    "about_event",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="About the event description"
                    ),
                ),
                (
                    "route_description",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="Description of the race route"
                    ),
                ),
                (
                    "parking_info",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="Parking information"
                    ),
                ),
                (
                    "sponsor_description",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="Description for sponsors section"
                    ),
                ),
                (
                    "sponsors",
                    wagtail.fields.StreamField(
                        [("sponsor_level", 7)],
                        blank=True,
                        block_lookup={
                            0: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"help_text": "e.g., Apple Pie, Pumpkin Pie"},
                            ),
                            1: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"help_text": "Sponsor name", "required": True},
                            ),
                            2: (
                                "wagtail.images.blocks.ImageChooserBlock",
                                (),
                                {"help_text": "Sponsor logo", "required": False},
                            ),
                            3: (
                                "wagtail.blocks.URLBlock",
                                (),
                                {"help_text": "Sponsor website", "required": False},
                            ),
                            4: (
                                "wagtail.blocks.TextBlock",
                                (),
                                {"help_text": "Brief description", "required": False},
                            ),
                            5: (
                                "wagtail.blocks.StructBlock",
                                [
                                    [
                                        ("name", 1),
                                        ("logo", 2),
                                        ("website_url", 3),
                                        ("description", 4),
                                    ]
                                ],
                                {},
                            ),
                            6: (
                                "wagtail.blocks.ListBlock",
                                (5,),
                                {"help_text": "Sponsors at this level"},
                            ),
                            7: (
                                "wagtail.blocks.StructBlock",
                                [[("level_name", 0), ("sponsors", 6)]],
                                {},
                            ),
                        },
                        help_text="Sponsor levels and sponsors",
                    ),
                ),
                (
                    "about_us",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="About the organization"
                    ),
                ),
                (
                    "library_images",
                    wagtail.fields.StreamField(
                        [("library_image", 2)],
                        blank=True,
                        block_lookup={
                            0: ("wagtail.images.blocks.ImageChooserBlock", (), {}),
                            1: ("wagtail.blocks.TextBlock", (), {"required": False}),
                            2: (
                                "wagtail.blocks.StructBlock",
                                [[("image", 0), ("caption", 1)]],
                                {},
                            ),
                        },
                        help_text="Future library images with captions",
                    ),
                ),
                ("mailing_address", models.TextField(blank=True)),
                ("email_address", models.EmailField(blank=True, max_length=254)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("facebook_url", models.URLField(blank=True)),
                ("instagram_url", models.URLField(blank=True)),
                (
                    "about_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image for about us section",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "hero_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Hero image for the page",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "route_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Route map image",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Turkey Trot Page",
            },
            bases=("wagtailcore.page",),
        ),
    ]
